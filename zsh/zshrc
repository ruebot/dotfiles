PATH=/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin:/home/nruest/.local/bin:/snap/bin
PATH=$HOME/bin:$PATH:$HOME/bin
export DEBFULLNAME="Nick Ruest"
export DEBEMAIL="ruestn@gmail.com"
export GOPATH=$HOME/.go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export GPG_TTY=$(tty)
export PATH="/home/nruest/bin/anaconda3/bin:$PATH"
setopt prompt_subst
autoload colors

for file in $HOME/git/dotfiles/zsh/{aliases,exports,credentials}; do
    [ -r "$file" ] && source "$file"
done

unset file

autoload -Uz vcs_info
precmd() {
  psvar=()
    vcs_info
      [[ -n $vcs_info_msg_0_ ]] && psvar[1]="$vcs_info_msg_0_"
      }
      PS1=$'%{\e[0;38m%}[%{\e[0m%}%n@%{\e[1;31m%}%m%{\e[0m%}:%C%{\e[0;38m%}]%{\e[0m%}%(1v.%F{green}%1v%f.)$ '

# set some colors
for COLOR in RED GREEN YELLOW WHITE BLACK CYAN; do
    eval PR_$COLOR='%{$fg[${(L)COLOR}]%}'
    eval PR_BRIGHT_$COLOR='%{$fg_bold[${(L)COLOR}]%}'
done
PR_RESET="%{${reset_color}%}";

# set formats
# %b - branchname
# %u - unstagedstr (see below)
# %c - stangedstr (see below)
# %a - action (e.g. rebase-i)
# %R - repository path
# %S - path in the repository
FMT_BRANCH="${PR_GREEN}%b%u%c${PR_RESET}" # e.g. master¹²
FMT_ACTION="(${PR_CYAN}%a${PR_RESET}%)"   # e.g. (rebase-i)
FMT_PATH="%R${PR_YELLOW}/%S"              # e.g. ~/repo/subdir

# check-for-changes can be really slow.
# you should disable it, if you work with large repositories
zstyle ':vcs_info:*:prompt:*' check-for-changes true
zstyle ':vcs_info:*:prompt:*' unstagedstr '¹'  # display ¹ if there are unstaged changes
zstyle ':vcs_info:*:prompt:*' stagedstr '²'    # display ² if there are staged changes
zstyle ':vcs_info:*:prompt:*' actionformats "${FMT_BRANCH}${FMT_ACTION}//" "${FMT_PATH}"
zstyle ':vcs_info:*:prompt:*' formats       "${FMT_BRANCH}//"              "${FMT_PATH}"
zstyle ':vcs_info:*:prompt:*' nvcsformats   ""                             "%~"

# next lets set some enviromental/shell pref stuff up
# # setopt NOHUP
# #setopt NOTIFY
# #setopt NO_FLOW_CONTROL
 setopt APPEND_HISTORY
# # setopt AUTO_LIST            # these two should be turned off
# # setopt AUTO_REMOVE_SLASH
# # setopt AUTO_RESUME          # tries to resume command of same name
 unsetopt BG_NICE               # do NOT nice bg commands
 setopt CORRECT                 # command CORRECTION
 setopt EXTENDED_HISTORY                # puts timestamps in the history
# # setopt HASH_CMDS            # turns on hashing
 setopt MENUCOMPLETE
 setopt HIST_ALLOW_CLOBBER
 setopt HIST_REDUCE_BLANKS
 setopt INC_APPEND_HISTORY
 setopt ALL_EXPORT
 setopt SHARE_HISTORY
 setopt EXTENDED_HISTORY


 TZ="America/Toronto"
 HISTFILE=$HOME/.zhistory
 HISTSIZE=1000000
 SAVEHIST=1000000

# rbenv
export RUBY_CFLAGS="-march=native -O3"
export PATH=$HOME/.rbenv/bin:$PATH
eval "$(rbenv init -)"

# # Set/unset  shell options
 setopt   notify globdots correct pushdtohome cdablevars autolist
 setopt   correctall autocd recexact longlistjobs
 setopt   autoresume histignoredups pushdsilent noclobber
 setopt   autopushd pushdminus extendedglob rcquotes mailwarning
 unsetopt bgnice autoparamslash
#
# # Autoload zsh modules when they are referenced
 zmodload -a zsh/stat stat
 zmodload -a zsh/zpty zpty
 zmodload -a zsh/zprof zprof
#
unset JAVA_TOOL_OPTIONS
#
GPG_TTY=$(tty)
export GPG_TTY

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#__conda_setup="$('/home/nruest/bin/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
#    eval "$__conda_setup"
#else
#    if [ -f "/home/nruest/bin/anaconda3/etc/profile.d/conda.sh" ]; then
#        . "/home/nruest/bin/anaconda3/etc/profile.d/conda.sh"
#    else
#        export PATH="/home/nruest/bin/anaconda3/bin:$PATH"
#    fi
#fi
#unset __conda_setup
# <<< conda initialize <<<
